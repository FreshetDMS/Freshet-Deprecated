
buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }
  apply from: file('gradle/buildscript.gradle'), to: buildscript
}

allprojects {
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'https://repository.apache.org/content/repositories/snapshots/'
    }
    maven {
      url 'http://conjars.org/repo'
    }
  }
}

//apply from: file('gradle/convention.gradle')
//apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
//apply from: file('gradle/license.gradle')
//apply from: file('gradle/release.gradle')
apply from: file("gradle/dependency-versions.gradle")


subprojects { project ->
  apply plugin: "java"
  sourceCompatibility = 1.8
  status = rootProject.status
}

project(':freshet-core') {
  dependencies {
    compile project(':freshet-common')
    compile "org.apache.samza:samza-api:$samzaVersion"
    compile "org.apache.samza:samza-core_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kv_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kafka_$scalaVersion:$samzaVersion"
    compile ("org.apache.samza:samza-yarn_$scalaVersion:$samzaVersion") {
      exclude group: 'javax.servlet', module: 'servlet-api'
    }
    compile "org.apache.avro:avro:$avroVersion"
    compile "org.apache.curator:curator-framework:$curatorVersion"
    compile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "com.101tec:zkclient:$zkClientVersion"
    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    testCompile "org.apache.curator:curator-test:$curatorVersion"
    testCompile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion:test"
    testCompile "junit:junit:$junitVersion"
  }
}

project(':freshet-experiments') {
  dependencies {
    compile project(':freshet-core')
    compile project(':freshet-common')
    compile "org.apache.samza:samza-api:$samzaVersion"
    compile "org.apache.samza:samza-core_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kv_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kafka_$scalaVersion:$samzaVersion"
    compile ("org.apache.samza:samza-yarn_$scalaVersion:$samzaVersion") {
      exclude group: 'javax.servlet', module: 'servlet-api'
    }
    compile "org.apache.avro:avro:$avroVersion"
    compile "org.apache.curator:curator-framework:$curatorVersion"
    compile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "com.101tec:zkclient:$zkClientVersion"
    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    testCompile "junit:junit:$junitVersion"
  }
}

project(':freshet-codegen') {
  dependencies {
    compile project(':freshet-core')
    compile project(':freshet-common')
    compile "org.apache.samza:samza-api:$samzaVersion"
    compile "org.apache.samza:samza-core_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kv_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kafka_$scalaVersion:$samzaVersion"
    compile ("org.apache.samza:samza-yarn_$scalaVersion:$samzaVersion") {
      exclude group: 'javax.servlet', module: 'servlet-api'
    }
    compile "org.apache.avro:avro:$avroVersion"
    compile "org.apache.curator:curator-framework:$curatorVersion"
    compile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "com.101tec:zkclient:$zkClientVersion"
    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    testCompile "junit:junit:$junitVersion"
  }
}

project(':freshet-common') {
  dependencies {
    compile "com.google.guava:guava:$guavaVersion"
  }
}

project(':freshet-beam-runner') {
  dependencies {
    compile project(':freshet-samza-utils')
    compile "org.apache.samza:samza-api:$samzaVersion"
    compile "org.apache.samza:samza-core_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kv_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kafka_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-yarn_$scalaVersion:$samzaVersion"
    compile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion"
    compile "org.apache.beam:beam-sdks-java-core:$beamVersion"
    compile "org.apache.beam:beam-sdks-java-extensions-join-library:$beamVersion"
    compile "org.apache.beam:beam-sdks-java-io-kafka:$beamVersion"
    compile "com.google.guava:guava:$guavaVersion"
    compile "com.google.auto.service:auto-service:$googleAutoServiceVersion"
  }
}

project(':freshet-samza-utils') {
  dependencies {
    compile project(':freshet-common')
    compile "org.apache.samza:samza-api:$samzaVersion"
    compile "org.apache.samza:samza-core_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kv_$scalaVersion:$samzaVersion"
    compile "org.apache.samza:samza-kafka_$scalaVersion:$samzaVersion"
    compile ("org.apache.samza:samza-yarn_$scalaVersion:$samzaVersion") {
      exclude group: 'javax.servlet', module: 'servlet-api'
    }
    compile "org.apache.curator:curator-framework:$curatorVersion"
    compile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "com.101tec:zkclient:$zkClientVersion"
    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    testCompile "org.apache.curator:curator-test:$curatorVersion"
    testCompile "org.apache.kafka:kafka_$scalaVersion:$kafkaVersion:test"
    testCompile "junit:junit:$junitVersion"
  }
}
